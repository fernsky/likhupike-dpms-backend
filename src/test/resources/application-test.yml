testcontainers:
  reuse:
    enable: true

spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
  liquibase:
    enabled: false
    change-log: classpath:db/changelog/db.changelog-master.xml
    contexts: test
    default-schema: public
    drop-first: true # Be careful, this drops and recreates schema in test
  test:
    database:
      replace: none
  redis:
    connect-timeout: 2s
    timeout: 1s
    enabled: false
  cache:
    type: redis
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  data:
    redis:
      repositories:
        enabled: false
  main:
    allow-bean-definition-overriding: true
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: always
      schema: classpath:org/springframework/session/jdbc/schema-postgresql.sql
      table-name: spring_session
    timeout: 30m
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: metrics,prometheus
  metrics:
    enable:
      all: true
    distribution:
      percentiles-histogram:
        all: true

dpms:
  minio:
    endpoint: placeholder-will-be-replaced-by-testcontainer
    access-key: minioaccess
    secret-key: miniosecret
    bucket: test-bucket
    # endpoint will be set dynamically by TestMinioConfig

test:
  storage:
    base-path: test-uploads
    temp-dir: ${java.io.tmpdir}/dpms-test-uploads
