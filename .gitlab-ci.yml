image: gradle:8.6.0-jdk21

variables:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: isresearch/dpms-api
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  # Add these production environment variables
  SPRING_PROFILES_ACTIVE: prod
  POSTGRES_USER: dpms_prod
  POSTGRES_DB: dpms_prod
  POSTGRES_HOST: postgres
  SPRING_REDIS_HOST: redis
  MINIO_ROOT_USER: dpms_minio_admin
  MINIO_ENDPOINT: http://minio:9000

# Add these as masked variables in GitLab CI/CD settings:
# POSTGRES_PASSWORD
# REDIS_PASSWORD
# MINIO_ROOT_PASSWORD
# JWT_SECRET
# MAIL_USERNAME
# MAIL_PASSWORD
# GRAFANA_ADMIN_PASSWORD
# ELASTIC_PASSWORD
# KIBANA_PASSWORD

stages:
  - test
  - build
  - publish
  - deploy

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

test:
  stage: test
  script:
    - gradle test
  artifacts:
    reports:
      junit: build/test-results/test/**/TEST-*.xml

build:
  stage: build
  script:
    - gradle bootJar
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week

publish:
  stage: publish
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - |
      if [[ "$CI_COMMIT_TAG" ]]; then
        # For tags, use the tag as version
        VERSION=$CI_COMMIT_TAG
      else
        # For other branches, use branch name and commit SHA
        VERSION="${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
      fi
    - docker build -t $DOCKER_IMAGE:$VERSION .
    - docker push $DOCKER_IMAGE:$VERSION
    - |
      if [[ "$CI_COMMIT_TAG" ]]; then
        docker tag $DOCKER_IMAGE:$VERSION $DOCKER_IMAGE:latest
        docker push $DOCKER_IMAGE:latest
      fi
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "main"

deploy:
  stage: deploy
  environment:
    name: production
  variables:
    COOLIFY_URL: ${COOLIFY_API_URL}
    COOLIFY_TOKEN: ${COOLIFY_API_TOKEN}
  script:
    - |
      # Get the latest version tag
      VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}}
      
      # Trigger Coolify deployment
      curl -X POST "${COOLIFY_URL}/api/v1/deploy" \
        -H "Authorization: Bearer ${COOLIFY_TOKEN}" \
        -H "Content-Type: application/json" \
        --data "{
          \"serviceId\": \"${COOLIFY_SERVICE_ID}\",
          \"image\": \"${DOCKER_IMAGE}:${VERSION}\"
        }"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "main"
